[
  {
    "sessionId": "trace_1752371805081_h7lq48kd1",
    "startTime": "2025-07-13T01:56:45.081Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T01:56:45.081Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752371805081_h7lq48kd1",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T01:56:45.081Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T01:56:45.082Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T01:56:45.082Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T01:56:45.082Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T01:56:45.081Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752371805081_h7lq48kd1",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T01:56:47.135Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T01:56:47.135Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T01:56:48.895Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T01:56:48.896Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: invalid private key, expected hex or 32 bytes, got string. Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: invalid private key, expected hex or 32 bytes, got string. Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: invalid private key, expected hex or 32 bytes, got string. Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T01:56:48.896Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: invalid private key, expected hex or 32 bytes, got string. Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T01:56:48.896Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: invalid private key, expected hex or 32 bytes, got string. Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T01:56:48.897Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752372613854_j8ffof2y2",
    "startTime": "2025-07-13T02:10:13.854Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:10:13.854Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752372613854_j8ffof2y2",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:10:13.855Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:10:13.855Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:10:13.855Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:10:13.855Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:10:13.854Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752372613854_j8ffof2y2",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:10:15.266Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:10:15.267Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:10:16.802Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:10:16.803Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: x.replace is not a function. Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: x.replace is not a function. Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: x.replace is not a function. Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:10:16.804Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: x.replace is not a function. Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:10:16.804Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: x.replace is not a function. Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:10:16.804Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752373549982_7uhfnauy5",
    "startTime": "2025-07-13T02:25:49.983Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:25:49.983Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752373549982_7uhfnauy5",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:25:49.983Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752373549982_7uhfnauy5",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:25:49.983Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:25:49.984Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:25:49.984Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:25:49.984Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:25:52.136Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:25:52.137Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:25:53.777Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:25:53.775Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:25:53.777Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:25:53.778Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:25:53.778Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752373702655_yliz0aen0",
    "startTime": "2025-07-13T02:28:22.656Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:28:22.656Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752373702655_yliz0aen0",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:28:22.656Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:28:22.656Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:28:22.656Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:28:22.656Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:28:22.655Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752373702655_yliz0aen0",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:28:24.099Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:28:24.100Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:28:25.228Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:28:25.228Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:28:25.229Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:28:25.229Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:28:25.229Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752373827247_rhtm68aai",
    "startTime": "2025-07-13T02:30:27.248Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:30:27.248Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752373827247_rhtm68aai",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:30:27.248Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:30:27.248Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:30:27.249Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:30:27.250Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:30:27.247Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752373827247_rhtm68aai",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:30:28.719Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:30:28.719Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:30:30.365Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:30:30.366Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:30:30.367Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:30:30.367Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:30:30.367Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752374727408_la2gqjuwv",
    "startTime": "2025-07-13T02:45:27.410Z",
    "steps": [
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:45:27.410Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:45:27.409Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752374727408_la2gqjuwv",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:45:27.410Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:45:27.411Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:45:27.411Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:45:27.409Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752374727408_la2gqjuwv",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:45:29.029Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:45:29.030Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:45:30.673Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:45:30.674Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:45:30.675Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:45:30.675Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:45:30.676Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752375005820_edxaylbdj",
    "startTime": "2025-07-13T02:50:05.821Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:50:05.821Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752375005820_edxaylbdj",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:50:05.822Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:50:05.823Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:50:05.822Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:50:05.824Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:50:05.821Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752375005820_edxaylbdj",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:50:07.480Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:50:07.480Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:50:09.612Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:50:09.614Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:50:09.614Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:50:09.614Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:50:09.615Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752375478104_g3dwnzp2x",
    "startTime": "2025-07-13T02:57:58.105Z",
    "steps": [
      {
        "id": "step_3",
        "timestamp": "2025-07-13T02:57:58.105Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T02:57:58.105Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T02:57:58.105Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752375478104_g3dwnzp2x",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T02:57:58.105Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T02:57:58.105Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T02:57:58.104Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752375478104_g3dwnzp2x",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T02:57:59.942Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T02:57:59.943Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T02:58:02.955Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T02:58:02.956Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T02:58:02.957Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T02:58:02.957Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Unknown Error\n520\nhttps://docs.biconomy.io/troubleshooting/commonerrors\n\n\"Error coming from Bundler: method must be one of the following values: pm_sponsorUserOperation, pm_supportedPaymasters, pm_supportedSmartAccounts, pm_getFeeQuoteOrData, pm_getPaymasterData, pm_getPaymasterStubData\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T02:58:02.958Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752376514976_eb8e9wb72",
    "startTime": "2025-07-13T03:15:14.976Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T03:15:14.976Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752376514976_eb8e9wb72",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T03:15:14.977Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752376514976_eb8e9wb72",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T03:15:14.977Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T03:15:14.977Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T03:15:14.978Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T03:15:14.978Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T03:15:16.990Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T03:15:16.990Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T03:15:19.639Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T03:15:19.640Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T03:15:19.640Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T03:15:19.641Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: Failed to parse URL from undefined. Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T03:15:19.642Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T03:15:22.218Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T03:15:24.353Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T03:15:24.355Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752389082724_tkyaaznrw",
    "startTime": "2025-07-13T06:44:42.724Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T06:44:42.724Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752389082724_tkyaaznrw",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 10,
          "netAmount": 9.6,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T06:44:42.725Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T06:44:42.725Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T06:44:42.726Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 9.6
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T06:44:42.726Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T06:44:42.724Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752389082724_tkyaaznrw",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 10,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T06:44:45.210Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T06:44:45.209Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T06:44:48.153Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T06:44:48.153Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T06:44:48.154Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T06:44:48.154Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T06:44:48.154Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T06:44:52.379Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 9.6,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T06:44:53.779Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T06:44:53.780Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752390642138_x4anjku7l",
    "startTime": "2025-07-13T07:10:42.139Z",
    "steps": [
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:10:42.139Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:10:42.138Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752390642138_x4anjku7l",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 5,
          "netAmount": 4.8,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:10:42.139Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:10:42.140Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 4.8
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:10:42.140Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:10:42.138Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752390642138_x4anjku7l",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 5,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:10:44.285Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:10:44.285Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 4.8,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:10:46.554Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:10:46.555Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:10:46.555Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:10:46.555Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:10:46.555Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:14:06.659Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 4.8,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:14:08.460Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:14:08.459Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      }
    ]
  },
  {
    "sessionId": "trace_1752391295228_t7wtjwou5",
    "startTime": "2025-07-13T07:21:35.229Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:21:35.229Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752391295228_t7wtjwou5",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:21:35.229Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:21:35.230Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:21:35.229Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:21:35.230Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:21:35.228Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752391295228_t7wtjwou5",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:21:37.463Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:21:37.464Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:21:38.073Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:21:38.074Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "API call failed",
          "status": 400,
          "errorData": {
            "error": "Missing required parameters: to, imageFile, giftMessage, initialBalance",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "API call failed",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:21:38.074Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless mint failed",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:21:38.075Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:21:38.074Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless mint failed"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:21:48.991Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:21:49.356Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:21:49.357Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Invalid initial balance",
            "code": "INVALID_BALANCE",
            "step": "VALIDATION"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752391520523_y73rxayqj",
    "startTime": "2025-07-13T07:25:20.524Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:25:20.524Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752391520523_y73rxayqj",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:25:20.524Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:25:20.525Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:25:20.526Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:25:20.526Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:25:20.523Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752391520523_y73rxayqj",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:25:22.380Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:25:22.381Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:25:25.876Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:25:25.877Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:25:25.877Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:25:25.878Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: SmartAccountInsufficientFundsError\naa21\nhttps://docs.biconomy.io/troubleshooting/commonerrors\naa21: You are not using a paymaster, and the sender address did not have enough native tokens to cover the gas costs associated with the user operation.\n,Potential cause(s): \n\nYour smart wallet does not have funds to send transaction.\n,Potential solution(s): \n\nIf you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund.\nSend some native tokens in your smart wallet to be able to resolve the error.\nIf you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set when you send the transaction.\n\"Error coming from Bundler: AA21 didn't pay prefund\". Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:25:25.879Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:25:30.403Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:25:31.687Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:25:31.688Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752391637668_9op53v82c",
    "startTime": "2025-07-13T07:27:17.669Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:27:17.669Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752391637668_9op53v82c",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:27:17.669Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752391637668_9op53v82c",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:27:17.669Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:27:17.670Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:27:17.670Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:27:17.670Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:27:19.262Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:27:19.262Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:27:20.434Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:27:20.435Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Gasless transaction failed: this.bundler.estimateUserOpGas is not a function. Please try again or use gas-paid transaction.",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Gasless transaction failed: this.bundler.estimateUserOpGas is not a function. Please try again or use gas-paid transaction.",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Gasless transaction failed: this.bundler.estimateUserOpGas is not a function. Please try again or use gas-paid transaction.",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:27:20.435Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless transaction failed: this.bundler.estimateUserOpGas is not a function. Please try again or use gas-paid transaction.",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:27:20.436Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless transaction failed: this.bundler.estimateUserOpGas is not a function. Please try again or use gas-paid transaction."
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:27:20.436Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:27:23.682Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:27:24.902Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:27:24.902Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752391912430_3wy7r7mw5",
    "startTime": "2025-07-13T07:31:52.431Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:31:52.431Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752391912430_3wy7r7mw5",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:31:52.433Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:31:52.433Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:31:52.434Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:31:52.435Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:31:52.431Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752391912430_3wy7r7mw5",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:31:54.142Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:31:54.143Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:31:55.210Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:31:55.211Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: sendTransaction is not defined",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: sendTransaction is not defined",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: sendTransaction is not defined",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:31:55.212Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: sendTransaction is not defined",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:31:55.213Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:31:55.213Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: sendTransaction is not defined"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:31:59.190Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:32:00.291Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:32:00.292Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752392021437_wfjmu7rr2",
    "startTime": "2025-07-13T07:33:41.437Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:33:41.437Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752392021437_wfjmu7rr2",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:33:41.438Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:33:41.439Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:33:41.439Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:33:41.440Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:33:41.437Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752392021437_wfjmu7rr2",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:33:43.304Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:33:43.304Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:33:45.426Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:33:45.424Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:33:45.427Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:33:45.426Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:33:45.427Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:33:49.983Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:33:50.911Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:33:50.912Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752392416203_5i5g7llq7",
    "startTime": "2025-07-13T07:40:16.203Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:40:16.203Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752392416203_5i5g7llq7",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:40:16.203Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:40:16.204Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:40:16.203Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:40:16.204Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:40:16.203Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752392416203_5i5g7llq7",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:40:17.808Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:40:17.808Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:40:19.432Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:40:19.433Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x02101dfB77FDE026414827Fdc604ddAF224F0921\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x02101dfB77FDE026414827Fdc604ddAF224F0921\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x02101dfB77FDE026414827Fdc604ddAF224F0921\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:40:19.434Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x02101dfB77FDE026414827Fdc604ddAF224F0921\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:40:19.434Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x02101dfB77FDE026414827Fdc604ddAF224F0921\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:40:19.435Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:40:23.239Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:40:24.076Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:40:24.077Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752392568051_oyxjvduk5",
    "startTime": "2025-07-13T07:42:48.052Z",
    "steps": [
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:42:48.052Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:42:48.052Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:42:48.052Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752392568051_oyxjvduk5",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:42:48.053Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:42:48.053Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:42:48.051Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752392568051_oyxjvduk5",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:42:49.772Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:42:49.773Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:42:52.356Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:42:52.357Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:42:52.358Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:42:52.358Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:42:52.359Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:42:55.949Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:42:56.927Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:42:56.927Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752393234233_mcvgwnq3n",
    "startTime": "2025-07-13T07:53:54.233Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:53:54.233Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752393234233_mcvgwnq3n",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:53:54.234Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752393234233_mcvgwnq3n",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:53:54.234Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:53:54.235Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:53:54.235Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:53:54.236Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:53:56.147Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:53:56.148Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:53:58.170Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:53:58.172Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: transaction is not defined",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: transaction is not defined",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: transaction is not defined",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:53:58.172Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: transaction is not defined",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:53:58.173Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: transaction is not defined"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:53:58.173Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:54:02.083Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:54:03.245Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:54:03.246Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752393381149_s0amdfi67",
    "startTime": "2025-07-13T07:56:21.149Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T07:56:21.149Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752393381149_s0amdfi67",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T07:56:21.150Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T07:56:21.150Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T07:56:21.150Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T07:56:21.150Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T07:56:21.149Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752393381149_s0amdfi67",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T07:56:23.443Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T07:56:23.443Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T07:56:25.680Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T07:56:25.681Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T07:56:25.681Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T07:56:25.681Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T07:56:25.681Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T07:56:28.842Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T07:56:29.595Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T07:56:29.596Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752394440885_nojp3l11c",
    "startTime": "2025-07-13T08:14:00.885Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T08:14:00.885Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752394440885_nojp3l11c",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T08:14:00.886Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752394440885_nojp3l11c",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T08:14:00.886Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T08:14:00.887Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T08:14:00.887Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T08:14:00.888Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T08:14:03.225Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T08:14:03.225Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T08:14:05.702Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T08:14:05.703Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752394445681",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x9084b40307575922fd34ffc8d076a64c0962c2b5aad8be7c053fc0f9181861b9",
            "tokenId": "1752394445681",
            "tbaAddress": "0x96b2077f578D9dB4b0d067057554C5253922C1ad",
            "metadataUri": "https://ipfs.io/ipfs/bafkreidb14adee1ea485202bd1e04b19ab4807c158da685062d110da8",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752394445681",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752394445681",
            "gasless": false,
            "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T08:14:05.703Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752394445681",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T08:14:05.703Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752394445681",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T08:14:05.703Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T08:14:05.704Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T08:14:05.704Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T08:14:08.612Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-13T08:14:09.345Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-13T08:14:09.345Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752430221727_k8wcc40m1",
    "startTime": "2025-07-13T18:10:21.728Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T18:10:21.728Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752430221727_k8wcc40m1",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T18:10:21.728Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752430221727_k8wcc40m1",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T18:10:21.729Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T18:10:21.729Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T18:10:21.730Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T18:10:21.731Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T18:10:23.951Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T18:10:23.951Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T18:10:26.918Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T18:10:26.919Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752430225496",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0xe731e541ca2075b3ca548ba23c4571b96cb294acd35c1bd162b44655f7eb06c0",
            "tokenId": "1752430225496",
            "tbaAddress": "0x219Ee149503d8b5618C0a1DfEdE37069D96a0Cd9",
            "metadataUri": "https://ipfs.io/ipfs/bafkreid390629f22aabe33b0f0c8fe2197a44892019503d5a990e4163",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752430225496",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752430225496",
            "gasless": false,
            "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T18:10:26.920Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752430225496",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T18:10:26.920Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752430225496",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T18:10:26.921Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T18:10:26.921Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T18:10:26.922Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T18:10:30.789Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-13T18:10:31.757Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-13T18:10:31.758Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752430541805_9hxqni74g",
    "startTime": "2025-07-13T18:15:41.806Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T18:15:41.806Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752430541805_9hxqni74g",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T18:15:41.807Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T18:15:41.808Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T18:15:41.808Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T18:15:41.809Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T18:15:41.806Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752430541805_9hxqni74g",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T18:15:43.813Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T18:15:43.815Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T18:15:54.595Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T18:15:54.601Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "API call failed",
          "status": 500,
          "errorData": {}
        },
        "result": "error",
        "error": "API call failed",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T18:15:54.601Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless mint failed",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T18:15:54.601Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless mint failed"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T18:15:54.602Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752431016784_w0n25wjoa",
    "startTime": "2025-07-13T18:23:36.785Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T18:23:36.785Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752431016784_w0n25wjoa",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T18:23:36.786Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T18:23:36.785Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752431016784_w0n25wjoa",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T18:23:36.787Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T18:23:36.787Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T18:23:36.788Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T18:23:39.110Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T18:23:39.111Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T18:23:42.684Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T18:23:42.685Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752431021424",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x2bf2e6aeb10f7bc6920dd5e8704376b49a431b507d10903b8d27c28f37e87c28",
            "tokenId": "1752431021424",
            "tbaAddress": "0x4A2600fA7Ca041013922b87f33853fd36D1B9023",
            "metadataUri": "https://ipfs.io/ipfs/bafkreid63eeffc7da8e09f25396ebde6f61e07f4727f58763c09c9f16",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752431021424",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752431021424",
            "gasless": false,
            "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T18:23:42.685Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752431021424",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T18:23:42.685Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752431021424",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T18:23:42.686Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T18:23:42.686Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T18:23:42.686Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T18:23:46.446Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-13T18:23:47.885Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752431027018",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "NFT minted successfully on blockchain! 🎉",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x298dc5043c6981a873ecb683e05e07352d2d6f5996bfedf1eac6177ca94121a2",
            "tokenId": "1752431027018",
            "tbaAddress": "0x16682bf4074409899fF744Dee3c22b17d1d2a7b5",
            "metadataUri": "https://ipfs.io/ipfs/bafkreid61a39e2a36a23eeb34e9728ac43002d2fbcf512239c204fc42",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752431027018",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752431027018",
            "gasless": false,
            "message": "NFT minted successfully on blockchain! 🎉",
            "blockNumber": 0,
            "gasUsed": "0"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-13T18:23:47.884Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_20",
        "timestamp": "2025-07-13T18:23:47.886Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_SUCCESS_CONFIRMED",
        "data": {
          "tokenId": "1752431027018",
          "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752431027018",
          "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752431027018",
          "userPaidGas": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_19",
        "timestamp": "2025-07-13T18:23:47.886Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasPaid",
          "conditionResult": true,
          "tokenId": "1752431027018",
          "message": "NFT minted successfully on blockchain! 🎉",
          "apiSaysGasless": false,
          "expectedGasPaid": true
        },
        "result": "success",
        "decision": "IF(isTransactionGasPaid) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED"
      }
    ]
  },
  {
    "sessionId": "trace_1752431684748_80lhm2hp4",
    "startTime": "2025-07-13T18:34:44.749Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T18:34:44.749Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752431684748_80lhm2hp4",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T18:34:44.751Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T18:34:44.751Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T18:34:44.752Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T18:34:44.753Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T18:34:44.748Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752431684748_80lhm2hp4",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T18:34:47.144Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T18:34:47.145Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T18:34:50.929Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T18:34:50.929Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752431689433",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x101b60b5cf48a356b6f73568dc8407ee46cc10bb8c3e04452f3bd11172886c6c",
            "tokenId": "1752431689433",
            "tbaAddress": "0xe3941C32c4Bb0aABc8c6ecDaf4f591998B371D78",
            "metadataUri": "https://ipfs.io/ipfs/bafkreid7721094688cbf0ac1aab6a59caea20cea8cfc12871c2849a10",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752431689433",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752431689433",
            "gasless": false,
            "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T18:34:50.930Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752431689433",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T18:34:50.931Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752431689433",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T18:34:50.932Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T18:34:50.932Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T18:34:50.933Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T18:34:55.505Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-13T18:34:56.994Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752431696096",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "NFT minted successfully on blockchain! 🎉",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x619880acaf81390752d9e7076b2234b6189759da959e4e3bea153fc24885e3f8",
            "tokenId": "1752431696096",
            "tbaAddress": "0xF240838308DfE1B8C4a9f68eEF86D61324832606",
            "metadataUri": "https://ipfs.io/ipfs/bafkreid6e0982e8a2be7e8ddb5c4b382ac16275f1bd56511f29178b23",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752431696096",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752431696096",
            "gasless": false,
            "message": "NFT minted successfully on blockchain! 🎉",
            "blockNumber": 0,
            "gasUsed": "0"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-13T18:34:56.992Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_20",
        "timestamp": "2025-07-13T18:34:56.994Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_SUCCESS_CONFIRMED",
        "data": {
          "tokenId": "1752431696096",
          "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752431696096",
          "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752431696096",
          "userPaidGas": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_19",
        "timestamp": "2025-07-13T18:34:56.994Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasPaid",
          "conditionResult": true,
          "tokenId": "1752431696096",
          "message": "NFT minted successfully on blockchain! 🎉",
          "apiSaysGasless": false,
          "expectedGasPaid": true
        },
        "result": "success",
        "decision": "IF(isTransactionGasPaid) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED"
      }
    ]
  },
  {
    "sessionId": "trace_1752432792147_2jtcc9d8k",
    "startTime": "2025-07-13T18:53:12.148Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T18:53:12.148Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752432792147_2jtcc9d8k",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T18:53:12.149Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752432792147_2jtcc9d8k",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T18:53:12.150Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T18:53:12.151Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T18:53:12.152Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T18:53:12.153Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T18:53:14.233Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T18:53:14.233Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T18:53:17.542Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T18:53:17.543Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752432796108",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0xa16118965b2dcc61d174453d05bd77db1200e6ca10448b3311b7c06f48638dbc",
            "tokenId": "1752432796108",
            "tbaAddress": "0x54c6786b742d0762986f557B17c8b21886F86Dd1",
            "metadataUri": "https://ipfs.io/ipfs/bafkreidbf4f7211dfa474fdc14dc2756759bfd59ab0a67caade241dde",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752432796108",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752432796108",
            "gasless": false,
            "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T18:53:17.545Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752432796108",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T18:53:17.547Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T18:53:17.545Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752432796108",
          "message": "💰 NFT minted successfully - user paid gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T18:53:17.546Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T18:53:17.548Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T18:53:24.418Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-13T18:53:25.746Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-13T18:53:25.748Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752432805012",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "NFT minted successfully on blockchain! 🎉",
          "fullResponse": {
            "success": true,
            "transactionHash": "0xd5b20f3549002ee40b9ecf811cf7a6bb955f060edc5fcb70514dc7b43d33e9a6",
            "tokenId": "1752432805012",
            "tbaAddress": "0x68E8D9a815955B8c3f0f17349686c2CAEf1163B5",
            "metadataUri": "https://ipfs.io/ipfs/bafkreid8abac875fb1b045d290b800c558867baa7f97d1422395df305",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752432805012",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752432805012",
            "gasless": false,
            "message": "NFT minted successfully on blockchain! 🎉",
            "blockNumber": 0,
            "gasUsed": "0"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_19",
        "timestamp": "2025-07-13T18:53:25.748Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasPaid",
          "conditionResult": true,
          "tokenId": "1752432805012",
          "message": "NFT minted successfully on blockchain! 🎉",
          "apiSaysGasless": false,
          "expectedGasPaid": true
        },
        "result": "success",
        "decision": "IF(isTransactionGasPaid) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED"
      },
      {
        "id": "step_20",
        "timestamp": "2025-07-13T18:53:25.748Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_SUCCESS_CONFIRMED",
        "data": {
          "tokenId": "1752432805012",
          "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x02101dfB77FDE026414827Fdc604ddAF224F0921/1752432805012",
          "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x02101dfB77FDE026414827Fdc604ddAF224F0921%2F1752432805012",
          "userPaidGas": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752436758574_r78ya6bqb",
    "startTime": "2025-07-13T19:59:18.574Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-13T19:59:18.574Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752436758574_r78ya6bqb",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T19:59:18.576Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752436758574_r78ya6bqb",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T19:59:18.576Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T19:59:18.578Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T19:59:18.579Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T19:59:18.579Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T19:59:22.116Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T19:59:22.117Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T19:59:33.847Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T19:59:33.849Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "API call failed",
          "status": 500,
          "errorData": {}
        },
        "result": "error",
        "error": "API call failed",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T19:59:33.849Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Gasless mint failed",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T19:59:33.850Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Gasless mint failed"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T19:59:33.850Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752437133817_kwr5f1h33",
    "startTime": "2025-07-13T20:05:33.819Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-13T20:05:33.819Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752437133817_kwr5f1h33",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T20:05:33.819Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-13T20:05:33.820Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T20:05:33.821Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T20:05:33.822Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T20:05:33.817Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752437133817_kwr5f1h33",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T20:05:36.917Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T20:05:36.919Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T20:05:39.935Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T20:05:39.937Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Error - !Tokens\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Error - !Tokens\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Error - !Tokens\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T20:05:39.937Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Error - !Tokens\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T20:05:39.938Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Error - !Tokens\n\ncontract: 0x8DfCAfB320cBB7bcdbF4cc83A62bccA08B30F5D3\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T20:05:39.938Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T20:05:46.556Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T20:05:47.550Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T20:05:47.552Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752437419508_1j5fwdnpd",
    "startTime": "2025-07-13T20:10:19.510Z",
    "steps": [
      {
        "id": "step_4",
        "timestamp": "2025-07-13T20:10:19.510Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-13T20:10:19.510Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-13T20:10:19.510Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752437419508_1j5fwdnpd",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-13T20:10:19.511Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-13T20:10:19.512Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-13T20:10:19.508Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752437419508_1j5fwdnpd",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-13T20:10:21.895Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-13T20:10:21.895Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-13T20:10:24.406Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-13T20:10:24.406Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x3cB823E40359B9698b942547D9d2241d531f2708\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x3cB823E40359B9698b942547D9d2241d531f2708\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x3cB823E40359B9698b942547D9d2241d531f2708\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-13T20:10:24.407Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x3cB823E40359B9698b942547D9d2241d531f2708\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-13T20:10:24.408Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x3cB823E40359B9698b942547D9d2241d531f2708\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-13T20:10:24.408Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-13T20:10:27.892Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "bafkreid5283bf31e9e50dfcb42b3eb821c722441b4b2ed3efb3f1ef08",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-13T20:10:28.839Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-13T20:10:28.840Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752469617065_op6wc6gpc",
    "startTime": "2025-07-14T05:06:57.066Z",
    "steps": [
      {
        "id": "step_3",
        "timestamp": "2025-07-14T05:06:57.066Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-14T05:06:57.065Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752469617065_op6wc6gpc",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-14T05:06:57.067Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-14T05:06:57.067Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-14T05:06:57.067Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-14T05:06:57.065Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752469617065_op6wc6gpc",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-14T05:07:01.150Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-14T05:07:01.150Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-14T05:07:04.245Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-14T05:07:04.245Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752469624226",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-14T05:07:04.245Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752469624226",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x65c2e95d5e0564dac7b0dd5f2c85685a4932803f6ff447e0963d2170aa7ae55a",
            "tokenId": "1752469624226",
            "tbaAddress": "0x5958762b4ABcf8b750A825C0ef65aDbF37E2F122",
            "metadataUri": "https://ipfs.io/ipfs/ipfs://QmTbPRYhXHmGHjKPAtvrtzUx3a74kPsCRNTD7HagDfzJic/metadata.json",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752469624226",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752469624226",
            "gasless": false,
            "simplified": true,
            "method": "deterministic_tba",
            "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-14T05:07:04.246Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-14T05:07:04.246Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-14T05:07:04.245Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752469624226",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-14T05:07:04.247Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-14T05:07:10.386Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-14T05:07:11.684Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-14T05:07:11.685Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752469798761_eaaaf2on1",
    "startTime": "2025-07-14T05:09:58.762Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-14T05:09:58.762Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752469798761_eaaaf2on1",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-14T05:09:58.762Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-14T05:09:58.762Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-14T05:09:58.763Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-14T05:09:58.763Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-14T05:09:58.762Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752469798761_eaaaf2on1",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-14T05:10:02.295Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-14T05:10:02.295Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-14T05:10:05.261Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-14T05:10:05.262Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752469805245",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x6860dcc76ca51af570b99102f0085eacf4d60e3f9b7b7c0d823c6bf1d4c1997d",
            "tokenId": "1752469805245",
            "tbaAddress": "0x156ecC4B6777C2Bb03A5d270b31657b54B15268f",
            "metadataUri": "https://ipfs.io/ipfs/ipfs://QmbXWhi8qADBc8cTGhPGz48v2Q2aEHV2RRCsZHofXLsLz6/metadata.json",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752469805245",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752469805245",
            "gasless": false,
            "simplified": true,
            "method": "deterministic_tba",
            "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-14T05:10:05.263Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752469805245",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-14T05:10:05.263Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-14T05:10:05.263Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752469805245",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-14T05:10:05.263Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-14T05:10:05.263Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-14T05:10:08.769Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint-real",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-14T05:10:10.201Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 400,
          "statusText": "Bad Request",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-14T05:10:10.201Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Gas-paid API call failed",
          "status": 400,
          "errorData": {
            "error": "Real NFT minting failed",
            "code": "REAL_MINT_FAILED",
            "step": "REAL_MINT"
          }
        },
        "result": "error",
        "error": "Gas-paid API call failed",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752470065081_hgyydbexc",
    "startTime": "2025-07-14T05:14:25.082Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-14T05:14:25.082Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752470065081_hgyydbexc",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-14T05:14:25.082Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-14T05:14:25.082Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-14T05:14:25.082Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-14T05:14:25.083Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-14T05:14:25.081Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752470065081_hgyydbexc",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-14T05:14:27.799Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-14T05:14:27.799Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-14T05:14:31.020Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-14T05:14:31.021Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752470070652",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-14T05:14:31.021Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752470070652",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0xfbde014aeff25d649141b84d26af8c12eddd4c32585a0838fe13a73be2580b26",
            "tokenId": "1752470070652",
            "tbaAddress": "0x8E936f176d3BA7F9A5750fB4188829E8b99462F1",
            "metadataUri": "https://ipfs.io/ipfs/ipfs://QmWxnsjaNzbVSrpx1g1oMdAFYF4zVtEXx93sZGuf71W8o6/metadata.json",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752470070652",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752470070652",
            "gasless": false,
            "simplified": true,
            "method": "deterministic_tba",
            "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-14T05:14:31.021Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752470070652",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-14T05:14:31.021Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-14T05:14:31.021Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-14T05:14:31.021Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-14T05:14:34.071Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-14T05:14:35.812Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-14T05:14:35.813Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752470075797",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x43cf5893b4639f342aed7153b503ee5568a7e2e15d98492f6d26228713a18238",
            "tokenId": "1752470075797",
            "tbaAddress": "0xB4c3dE701e46E3400c219493e2903aE56B4A2381",
            "metadataUri": "https://ipfs.io/ipfs/ipfs://QmRZ6HziYSk7uAiiMXLU6Q9iyeRoeR98kXgy7v3LGxPLXo/metadata.json",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752470075797",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752470075797",
            "gasless": false,
            "simplified": true,
            "method": "deterministic_tba",
            "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_19",
        "timestamp": "2025-07-14T05:14:35.813Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasPaid",
          "conditionResult": true,
          "tokenId": "1752470075797",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "apiSaysGasless": false,
          "expectedGasPaid": true
        },
        "result": "success",
        "decision": "IF(isTransactionGasPaid) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED"
      },
      {
        "id": "step_20",
        "timestamp": "2025-07-14T05:14:35.813Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_SUCCESS_CONFIRMED",
        "data": {
          "tokenId": "1752470075797",
          "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752470075797",
          "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752470075797",
          "userPaidGas": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  },
  {
    "sessionId": "trace_1752477317260_0etpcqaff",
    "startTime": "2025-07-14T07:15:17.261Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-14T07:15:17.261Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752477317260_0etpcqaff",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-14T07:15:17.261Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-14T07:15:17.261Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-14T07:15:17.262Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-14T07:15:17.262Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-14T07:15:17.260Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752477317260_0etpcqaff",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-14T07:15:21.854Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-14T07:15:21.854Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-14T07:15:24.943Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-14T07:15:24.945Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-14T07:15:24.946Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-14T07:15:24.946Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-14T07:15:24.947Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-14T07:15:29.520Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-14T07:15:31.122Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-14T07:15:31.123Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      }
    ]
  },
  {
    "sessionId": "trace_1752477365117_5eccwqyui",
    "startTime": "2025-07-14T07:16:05.117Z",
    "steps": [
      {
        "id": "step_1",
        "timestamp": "2025-07-14T07:16:05.117Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752477365117_5eccwqyui",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 0,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_2",
        "timestamp": "2025-07-14T07:16:05.117Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752477365117_5eccwqyui",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 0,
          "netAmount": 0,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-14T07:16:05.117Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-14T07:16:05.118Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-14T07:16:05.118Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-14T07:16:05.118Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-14T07:16:06.956Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-14T07:16:06.956Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-14T07:16:08.565Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-14T07:16:08.566Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-14T07:16:08.567Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:259:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-14T07:16:08.567Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-14T07:16:08.568Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_API_ERROR → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-14T07:16:12.183Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-14T07:16:13.847Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_ERROR",
        "data": {
          "errorMessage": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
          "status": 500,
          "errorData": {
            "error": "Failed to mint NFT",
            "message": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
            "debug": "Check /api/debug/mint-logs for detailed error information"
          }
        },
        "result": "error",
        "error": "Contract execution failed: Execution Reverted: {\"code\":3,\"message\":\"execution reverted\"}\n\ncontract: 0x54314166B36E3Cc66cFb36265D99697f4F733231\nchainId: 84532",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-14T07:16:13.846Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 500,
          "statusText": "Internal Server Error",
          "ok": false
        },
        "result": "error",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      }
    ]
  },
  {
    "sessionId": "trace_1752516997966_lrc3gf3v7",
    "startTime": "2025-07-14T18:16:37.966Z",
    "steps": [
      {
        "id": "step_2",
        "timestamp": "2025-07-14T18:16:37.966Z",
        "component": "GIFT_WIZARD",
        "action": "MINT_GIFT_STARTED",
        "data": {
          "traceId": "trace_1752516997966_lrc3gf3v7",
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "amount": 1,
          "netAmount": 0.96,
          "referrer": null
        },
        "result": "pending",
        "path": ""
      },
      {
        "id": "step_3",
        "timestamp": "2025-07-14T18:16:37.967Z",
        "component": "GIFT_WIZARD",
        "action": "WIZARD_STATE_SET",
        "data": {
          "currentStep": "MINTING",
          "isLoading": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED"
      },
      {
        "id": "step_4",
        "timestamp": "2025-07-14T18:16:37.967Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_DECISION",
        "data": {
          "strategy": "GASLESS_FIRST",
          "reason": "User preference for free transactions"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET"
      },
      {
        "id": "step_5",
        "timestamp": "2025-07-14T18:16:37.967Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_MINT_STARTED",
        "data": {
          "walletAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": true,
          "message": "default",
          "amount": 0.96
        },
        "result": "pending",
        "path": "GIFT_WIZARD.MINT_GIFT_STARTED → GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION"
      },
      {
        "id": "step_6",
        "timestamp": "2025-07-14T18:16:37.967Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_STARTED",
        "data": {
          "hasImageFile": true,
          "hasFilteredUrl": true
        },
        "result": "pending",
        "path": "GIFT_WIZARD.WIZARD_STATE_SET → GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED"
      },
      {
        "id": "step_1",
        "timestamp": "2025-07-14T18:16:37.966Z",
        "component": "FLOW_TRACKER",
        "action": "TRACE_STARTED",
        "data": {
          "sessionId": "trace_1752516997966_lrc3gf3v7",
          "userAddress": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "metadata": {
            "amount": 1,
            "filter": "Original",
            "referrer": null
          }
        },
        "result": "success",
        "path": ""
      },
      {
        "id": "step_7",
        "timestamp": "2025-07-14T18:16:42.149Z",
        "component": "GIFT_WIZARD",
        "action": "IPFS_UPLOAD_SUCCESS",
        "data": {
          "ipfsCid": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png"
        },
        "result": "success",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_DECISION → GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED"
      },
      {
        "id": "step_8",
        "timestamp": "2025-07-14T18:16:42.149Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_CALL_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0.96,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_MINT_STARTED → GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS"
      },
      {
        "id": "step_9",
        "timestamp": "2025-07-14T18:16:45.570Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_STARTED → GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED"
      },
      {
        "id": "step_10",
        "timestamp": "2025-07-14T18:16:45.570Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752517004377",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0x6c4a36228c1436c576fa209b7d801ad68e3908231b7f8934294ee29e973cd409",
            "tokenId": "1752517004377",
            "tbaAddress": "0x3685a6aE70369De5E8748eB2182976fEE9C2Fe0F",
            "metadataUri": "https://ipfs.io/ipfs/ipfs://QmQ1272QB8XZGX2kiKKEhJAqD82LBYQ3ZYbct1k5SAvDsN/metadata.json",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752517004377",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752517004377",
            "gasless": false,
            "simplified": true,
            "method": "deterministic_tba",
            "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.IPFS_UPLOAD_SUCCESS → GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_11",
        "timestamp": "2025-07-14T18:16:45.572Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasless",
          "conditionResult": false,
          "tokenId": "1752517004377",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "apiSaysGasless": false
        },
        "result": "success",
        "decision": "IF(isTransactionGasless) = false → FALSE_PATH",
        "path": "GIFT_WIZARD.GASLESS_API_CALL_STARTED → GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED"
      },
      {
        "id": "step_12",
        "timestamp": "2025-07-14T18:16:45.572Z",
        "component": "GIFT_WIZARD",
        "action": "TRANSACTION_NOT_GASLESS",
        "data": {
          "errorMessage": "API returned gasless=false",
          "tokenId": "1752517004377",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "gaslessValue": false
        },
        "result": "error",
        "error": "API returned gasless=false",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_RECEIVED → GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_13",
        "timestamp": "2025-07-14T18:16:45.572Z",
        "component": "GIFT_WIZARD",
        "action": "GASLESS_ATTEMPT_FAILED",
        "data": {
          "errorMessage": "Transaction was not gasless",
          "errorType": "GASLESS_FAILURE",
          "willShowGasModal": true
        },
        "result": "error",
        "error": "attemptGaslessMint@webpack-internal:///(app-pages-browser)/./src/components/GiftWizard.tsx:284:19\n",
        "path": "GIFT_WIZARD.GASLESS_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS"
      },
      {
        "id": "step_14",
        "timestamp": "2025-07-14T18:16:45.572Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "gaslessFailed",
          "conditionResult": true,
          "nextAction": "SHOW_GAS_MODAL",
          "errorMessage": "Transaction was not gasless"
        },
        "result": "success",
        "decision": "IF(gaslessFailed) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED"
      },
      {
        "id": "step_15",
        "timestamp": "2025-07-14T18:16:45.572Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_MODAL_SHOWN",
        "data": {
          "estimatedGas": "150000",
          "gasPrice": "0.1",
          "totalCost": "0.000015",
          "networkName": "Base Sepolia"
        },
        "result": "success",
        "path": "GIFT_WIZARD.TRANSACTION_NOT_GASLESS → GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT"
      },
      {
        "id": "step_16",
        "timestamp": "2025-07-14T18:16:52.044Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_MINT_STARTED",
        "data": {
          "endpoint": "/api/mint",
          "to": "0xA362a26F6100Ff5f8157C0ed1c2bcC0a1919Df4a",
          "imageFile": "ipfs://QmdEGYRnKdjupv3N5yFVXuGDucwdnBC7daCJouhx9X4Mo8/logo.png",
          "initialBalance": 0.96,
          "filter": "Original"
        },
        "result": "pending",
        "path": "GIFT_WIZARD.GASLESS_ATTEMPT_FAILED → GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN"
      },
      {
        "id": "step_17",
        "timestamp": "2025-07-14T18:16:54.280Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_RECEIVED",
        "data": {
          "status": 200,
          "statusText": "OK",
          "ok": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.DECISION_POINT → GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED"
      },
      {
        "id": "step_18",
        "timestamp": "2025-07-14T18:16:54.280Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_API_RESPONSE_PARSED",
        "data": {
          "tokenId": "1752517013541",
          "hasShareUrl": true,
          "hasQrCode": true,
          "gasless": false,
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "fullResponse": {
            "success": true,
            "transactionHash": "0xc3c66df0edeb738dbf1ff0969d9f192f71839abc20ec4cc431db6e46a9699aef",
            "tokenId": "1752517013541",
            "tbaAddress": "0x9392f9Fb08F5213aFeab1c0e409b6444704B7381",
            "metadataUri": "https://ipfs.io/ipfs/ipfs://Qmc1TzkcnPZAhSJzge35ZaVLmxcLERgfGpULk13uSVYAxZ/metadata.json",
            "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752517013541",
            "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752517013541",
            "gasless": false,
            "simplified": true,
            "method": "deterministic_tba",
            "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
            "debug": "View detailed logs at /api/debug/mint-logs"
          }
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_MODAL_SHOWN → GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED"
      },
      {
        "id": "step_19",
        "timestamp": "2025-07-14T18:16:54.280Z",
        "component": "GIFT_WIZARD",
        "action": "DECISION_POINT",
        "data": {
          "condition": "isTransactionGasPaid",
          "conditionResult": true,
          "tokenId": "1752517013541",
          "message": "💰 NFT-Wallet creado exitosamente - usuario pagó gas (~$0.01)",
          "apiSaysGasless": false,
          "expectedGasPaid": true
        },
        "result": "success",
        "decision": "IF(isTransactionGasPaid) = true → TRUE_PATH",
        "path": "GIFT_WIZARD.GAS_PAID_MINT_STARTED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED"
      },
      {
        "id": "step_20",
        "timestamp": "2025-07-14T18:16:54.281Z",
        "component": "GIFT_WIZARD",
        "action": "GAS_PAID_SUCCESS_CONFIRMED",
        "data": {
          "tokenId": "1752517013541",
          "shareUrl": "https://cryptogift-wallets.vercel.app/token/0x54314166B36E3Cc66cFb36265D99697f4F733231/1752517013541",
          "qrCode": "https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https%3A%2F%2Fcryptogift-wallets.vercel.app%2Ftoken%2F0x54314166B36E3Cc66cFb36265D99697f4F733231%2F1752517013541",
          "userPaidGas": true
        },
        "result": "success",
        "path": "GIFT_WIZARD.GAS_PAID_API_RESPONSE_RECEIVED → GIFT_WIZARD.GAS_PAID_API_RESPONSE_PARSED → GIFT_WIZARD.DECISION_POINT"
      }
    ]
  }
]